name: Monolithic Architecture Tests

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: monolithic
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        java: [ '17','21' ]
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    env:
      SERVER_PORT_NO: 12560
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: maven
      - name: Install Gsvc Compiler
        run: mvn install -pl apzda-cloud-gsvc-compiler
      - name: Build with Maven
        run: mvn -B  package -Djava.version=${{ matrix.java }} --file pom.xml
      - name: Run AllInOne Application
        uses: JarvusInnovations/background-action@v1
        with:
          working-directory: apzda-cloud-gsvc-demo
          wait-for: 5m
          tail: true
          run: |-
            java -jar demo-math-service/target/demo-math-service-fat.jar &
            java -jar demo-allinone-app/target/demo-allinone-app-fat.jar &
          wait-on: |-
            http-get://localhost:${{ env.SERVER_PORT_NO }}/actuator/health
            tcp:localhost:9090
      - name: Download ijhttp tools
        run: docker pull jetbrains/intellij-http-client:233.11799.241
      - name: Execute HTTP requests
        run: |-
          docker run -it --rm -v ./apzda-cloud-gsvc-demo:/workdir jetbrains/intellij-http-client:233.11799.241 \
          --env-file http-docker.env.json \
          --env sit \
          bar-test.http foo-test.http i18n-test.http
