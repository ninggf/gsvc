name: Monolithic Architecture Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        java: [ '17','21' ]
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      mysql:
        image: mysql:8.0.35
        ports:
          - 3307:3306
        env:
          MYSQL_ROOT_PASSWORD: Abc12332!
          MYSQL_DATABASE: demo_db
      seata:
        image: apache/seata-server:2.1.0-slim
        ports:
          - 8091:8091
          - 7091:7091
        env:
          SEATA_PORT: 8091
          STORE_MODE: file
    env:
      SERVER_PORT_NO: 12560
      SPRING_PROFILES_ACTIVE: flyway
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: maven
      - name: Install Gsvc Compiler
        run: mvn install -pl apzda-cloud-gsvc-compiler
      - name: Build with Maven
        run: mvn -B  package -Djava.version=${{ matrix.java }} --file pom.xml
      - name: Run AllInOne Application
        uses: JarvusInnovations/background-action@v1
        with:
          working-directory: apzda-cloud-gsvc-demo
          wait-for: 5m
          tail: true
          run: |-
            java -jar demo-math-service/target/demo-math-service-fat.jar &
            java -jar demo-bar-service/target/demo-bar-service-fat.jar &
            java -jar demo-foo-service/target/demo-foo-service-fat.jar &
            java -jar demo-allinone-app/target/demo-allinone-app-fat.jar &
          wait-on: |-
            http-get://localhost:12561/actuator/health
            http-get://localhost:12562/actuator/health
            http-get://localhost:${{ env.SERVER_PORT_NO }}/actuator/health
            tcp:localhost:9090
      - name: Download ijhttp tools
        run: |-
          # curl -f -L -o ijhttp.zip "https://jb.gg/ijhttp/latest"
          # unzip ijhttp.zip
          # ./ijhttp/ijhttp --version
          docker pull jetbrains/intellij-http-client:233.15026.9
          docker tag  jetbrains/intellij-http-client:233.15026.9 ijhttp
      - name: Execute HTTP requests
        run: |-
          # ./ijhttp/ijhttp --env-file apzda-cloud-gsvc-demo/http-client.env.json --env sit apzda-cloud-gsvc-demo/bar-test.http apzda-cloud-gsvc-demo/foo-test.http apzda-cloud-gsvc-demo/i18n-test.http
          docker run --rm -v ./apzda-cloud-gsvc-demo:/workdir --add-host host.docker.internal:host-gateway ijhttp -D \
            --env-file http-client.env.json --env sit \
            i18n-test.http bar-test.http foo-test.http seata-test.http
