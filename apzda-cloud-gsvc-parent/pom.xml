<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.apzda.cloud</groupId>
        <artifactId>gsvc</artifactId>
        <version>3.4.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <artifactId>apzda-cloud-gsvc-parent</artifactId>
    <description>Parent pom providing dependency and plugin management for applications built with Maven</description>

    <properties>
        <!-- build skip -->
        <skipITs>true</skipITs>
        <!-- libraries version -->
        <groovy.version>4.0.25</groovy.version>
        <!-- plugins version -->
        <gmavenplus-plugin.version>4.1.1</gmavenplus-plugin.version>
        <!-- spring-boot-maven-plugin -->
        <spring-boot-maven-plugin.layer>false</spring-boot-maven-plugin.layer>
        <spring-boot-maven-plugin.classifier>fat</spring-boot-maven-plugin.classifier>
    </properties>

    <profiles>
        <!-- its -->
        <profile>
            <id>its</id>
            <properties>
                <skipITs>false</skipITs>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>reserve-tomcat-port</id>
                                <goals>
                                    <goal>reserve-network-port</goal>
                                </goals>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <portNames>
                                        <portName>tomcat.http.port</portName>
                                    </portNames>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-integration-test-sources</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/testi/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-integration-test-resources</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>add-test-resource</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/testi/resources</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <includes>
                                <include>**/*ItTest.java</include>
                            </includes>
                            <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                            <systemPropertyVariables>
                                <test.server.port>${tomcat.http.port}</test.server.port>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>layer</id>
            <properties>
                <spring-boot-maven-plugin.classifier>layer</spring-boot-maven-plugin.classifier>
                <spring-boot-maven-plugin.layer>true</spring-boot-maven-plugin.layer>
            </properties>
            <build>
                <finalName>${project.artifactId}</finalName>
            </build>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.json</include>
                    <include>**/*.ftl</include>
                </includes>
            </resource>
        </resources>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <!-- maven-resources-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <delimiters>
                            <delimiter>${resource.delimiter}</delimiter>
                        </delimiters>
                        <useDefaultDelimiters>false</useDefaultDelimiters>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                            <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>jks</nonFilteredFileExtension>
                            <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                            <nonFilteredFileExtension>pem</nonFilteredFileExtension>
                            <nonFilteredFileExtension>cert</nonFilteredFileExtension>
                            <nonFilteredFileExtension>key</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ftl</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <!-- spring-boot-maven-plugin -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>repackage</id>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                            <configuration>
                                <attach>false</attach>
                                <classifier>${spring-boot-maven-plugin.classifier}</classifier>
                                <layers>
                                    <enabled>${spring-boot-maven-plugin.layer}</enabled>
                                    <configuration>${project.basedir}/assembly/layers.xml</configuration>
                                </layers>
                                <excludeDevtools>true</excludeDevtools>
                                <excludeDockerCompose>true</excludeDockerCompose>
                                <excludes>
                                    <exclude>
                                        <groupId>org.projectlombok</groupId>
                                        <artifactId>lombok</artifactId>
                                    </exclude>
                                    <exclude>
                                        <groupId>org.springframework.boot</groupId>
                                        <artifactId>spring-boot-configuration-processor</artifactId>
                                    </exclude>
                                    <exclude>
                                        <groupId>org.mapstruct</groupId>
                                        <artifactId>mapstruct-processor</artifactId>
                                    </exclude>
                                    <exclude>
                                        <groupId>com.github.therapi</groupId>
                                        <artifactId>therapi-runtime-javadoc</artifactId>
                                    </exclude>
                                </excludes>
                            </configuration>
                        </execution>
                        <execution>
                            <id>build-info</id>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                            <configuration>
                                <additionalProperties>
                                    <encoding.source>${project.build.sourceEncoding}</encoding.source>
                                    <encoding.reporting>${project.build.sourceEncoding}</encoding.reporting>
                                    <java.source>${maven.compiler.source}</java.source>
                                    <java.target>${maven.compiler.target}</java.target>
                                </additionalProperties>
                            </configuration>
                        </execution>
                        <execution>
                            <id>pre-integration-test</id>
                            <goals>
                                <goal>start</goal>
                            </goals>
                            <configuration>
                                <skip>${skipITs}</skip>
                                <arguments>
                                    <argument>--server.port=${tomcat.http.port}</argument>
                                </arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-integration-test</id>
                            <goals>
                                <goal>stop</goal>
                            </goals>
                            <configuration>
                                <skip>${skipITs}</skip>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- git-commit-id-maven-plugin -->
                <plugin>
                    <groupId>io.github.git-commit-id</groupId>
                    <artifactId>git-commit-id-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <verbose>false</verbose>
                        <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>
                            ${project.build.outputDirectory}/git.properties
                        </generateGitPropertiesFilename>
                    </configuration>
                </plugin>
                <!-- protobuf-maven-plugin -->
                <plugin>
                    <groupId>org.xolstice.maven.plugins</groupId>
                    <artifactId>protobuf-maven-plugin</artifactId>
                    <version>${protobuf-maven-plugin.version}</version>
                    <extensions>true</extensions>
                    <executions>
                        <execution>
                            <id>protoc-compile</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>compile</goal>
                                <goal>compile-custom</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>protoc-test-compile</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>test-compile</goal>
                                <goal>test-compile-custom</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <protocArtifact>
                            com.google.protobuf:protoc:${protoc.version}:exe:${os.detected.classifier}
                        </protocArtifact>
                        <attachProtoSources>true</attachProtoSources>
                        <useArgumentFile>true</useArgumentFile>
                        <writeDescriptorSet>false</writeDescriptorSet>
                        <attachDescriptorSet>false</attachDescriptorSet>
                        <includeDependenciesInDescriptorSet>false</includeDependenciesInDescriptorSet>
                        <checkStaleness>true</checkStaleness>
                        <pluginId>grpc-java</pluginId>
                        <pluginArtifact>
                            io.grpc:protoc-gen-grpc-java:${grpc-java.version}:exe:${os.detected.classifier}
                        </pluginArtifact>
                        <protocPlugins>
                            <protocPlugin>
                                <id>gsvc</id>
                                <groupId>com.apzda.cloud</groupId>
                                <artifactId>gsvc-compiler</artifactId>
                                <version>${gsvc.compiler.version}</version>
                                <mainClass>com.apzda.gen.gsvc.GsvcGenerator</mainClass>
                            </protocPlugin>
                        </protocPlugins>
                    </configuration>
                </plugin>
                <!-- maven-assembly-plugin -->
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                            <configuration>
                                <appendAssemblyId>false</appendAssemblyId>
                                <descriptors>
                                    <descriptor>assembly/assembly-descriptor.xml</descriptor>
                                </descriptors>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- gmavenplus-plugin -->
                <plugin>
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>${gmavenplus-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.groovy</groupId>
                            <artifactId>groovy</artifactId>
                            <version>${groovy.version}</version>
                            <scope>runtime</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.groovy</groupId>
                            <artifactId>groovy-ant</artifactId>
                            <version>${groovy.version}</version>
                            <scope>runtime</scope>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
