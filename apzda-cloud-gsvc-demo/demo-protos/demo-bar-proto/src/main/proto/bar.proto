syntax = "proto3";

import "gsvc/ext.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

package bar;

option java_package = "com.apzda.cloud.demo.bar.proto";
option java_multiple_files = true;
option java_outer_classname = "BarProto";

option(gsvc.serviceName) = "BarService";

message BarReq {
  string name = 1;
  uint32 age = 2;
  repeated gsvc.UploadFile files = 10;
}

message BarRes {
  int32 err_code = 1;
  optional string err_msg = 2;
  optional string name = 3;
  optional uint32 age = 4;
  uint32 file_count = 10;
}

service BarService {
  rpc greeting(BarReq) returns (BarRes);
  rpc hello(BarReq) returns (stream BarRes);
  rpc hi(BarReq) returns(stream BarRes);
  rpc clientStreaming(stream BarReq) returns (BarRes);
  rpc bidiStreaming(stream BarReq) returns (stream BarRes);
  rpc err(google.protobuf.Empty) returns(gsvc.CommonRes);
  rpc rpcErr(google.protobuf.Empty) returns(gsvc.CommonRes);
  rpc ipAddr(google.protobuf.Empty) returns (gsvc.CommonRes);
}

message LoginReq {
  string username = 1;
  string password = 2;
}

message LoginRes {
  int32 err_code = 1;
  optional string err_msg = 2;
  string access_token = 3;
  string refresh_token = 4;
  string name = 5;
}

message SaReq {
  gsvc.CurrentUser current_user = 1;
  string name = 2;
}

message SaRes {
  int32 err_code = 1;
  optional string err_msg = 2;
  string uid = 3;
  string user_name = 4;
}

service SaService {
  rpc login(LoginReq) returns (LoginRes);
  rpc info(SaReq) returns (SaRes){
    option(google.api.http) = {
      get: "/sa/info"
    };
  }

  rpc hi(SaReq) returns(SaRes) {
    option(gsvc.route) = {
      path: "/sa/hi",
      login: true,
      access: "r('ADMIN') || r('USER')",
      methods:"get,post",
      summary: "打招呼",
      desc: "当用户登录成功后，用于获取欢迎信息",
      tags: "Home,首页"
    };
  }
}

message FileReq {
  optional string path = 1;
  repeated gsvc.UploadFile files = 2;
  gsvc.UploadFile file = 3;
  repeated string names = 4;
}

message FileInfo {
  uint32 index = 1; // 第几个文件
  optional string url = 2; // 文件的URL
  optional string path = 3; // 文件的绝对路径
  int32 error = 4; // 0: 正常; 其它值出错
  optional string message = 5; // 当error!=0时的错误提示
  int64 length = 6;
}

message UploadRes {
  int32 err_code = 1;
  optional string err_msg = 2;
  repeated FileInfo files = 3; // 文件列表
  repeated string names = 4;
  uint32 count = 5;
}

service FileService {
  rpc upload(FileReq) returns(UploadRes);
}
